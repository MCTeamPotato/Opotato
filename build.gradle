buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered',  name: 'mixingradle', version: '0.7+'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version "6.1.0"
    id 'java'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = '1.16.5-' + mod_version
group = 'com.teampotato.opotato'
archivesBaseName = 'opotato'

java.toolchain.languageVersion = JavaLanguageVersion.of(11)

minecraft {
    mappings channel: 'official', version: '1.16.5'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    
    runs {
        client {
            workingDirectory project.file('run')
            arg "-mixin.config=opotato.mixins.json"
            property 'forge.logging.markers', 'REGISTRIES'
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.console.level', 'info'
            mods {
                opotato {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            arg "-mixin.config=opotato.mixins.json"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'info'
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            mods {
                opotato {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            args '--mod', 'opotato', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                opotato {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name = 'CurseForge'
        url = "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.39'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    implementation fg.deobf('curse.maven:oculus-581495:4300427')
    implementation fg.deobf('curse.maven:the-twilight-forest-227639:3575220')
    implementation('com.google.code.gson:gson:2.8.9')
    implementation('org.json:json:20210307')
    implementation('com.moandjiezana.toml:toml4j:0.7.2')
}

configurations {
    shade
}

jar {
    manifest {
        attributes([
            "Specification-Title": "opotato",
            "Specification-Vendor": "teampotato",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"teampotato",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "opotato.mixins.json"
        ])
    }
}

shadowJar {
    baseName = 'opotato-1.16.5-' + mod_version + "-universal"
    classifier = null
    version = null
    dependencies {
        include dependency("com.google.code.gson:gson:2.8.9")
        include dependency("org.json:json:20210307")
        include dependency("com.moandjiezana.toml:toml4j:0.7.2")
    }
}

mixin {
    add sourceSets.main, "opotato.refmap.json"
    config "opotato.mixins.json"
}

reobf {
    shadowJar {}
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
